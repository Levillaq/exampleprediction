#!/bin/bash

# üöÄ –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è –ü—Ä–µ–¥–∏–∫—à–Ω –ë–æ—Ç–∞
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh [backend|frontend|bot|all]

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_step() {
    echo -e "${BLUE}üîÑ $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Git
    if ! command -v git &> /dev/null; then
        print_error "Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js –¥–ª—è frontend
    if [[ $DEPLOY_TARGET == "frontend" || $DEPLOY_TARGET == "all" ]]; then
        if ! command -v npm &> /dev/null; then
            print_error "Node.js/npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
            exit 1
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Firebase CLI –¥–ª—è frontend
    if [[ $DEPLOY_TARGET == "frontend" || $DEPLOY_TARGET == "all" ]]; then
        if ! command -v firebase &> /dev/null; then
            print_warning "Firebase CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
            npm install -g firebase-tools
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –¥–ª—è –±–æ—Ç–∞
    if [[ $DEPLOY_TARGET == "bot" || $DEPLOY_TARGET == "all" ]]; then
        if ! command -v python3 &> /dev/null; then
            print_error "Python 3 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
            exit 1
        fi
    fi
    
    print_success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_env() {
    print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    if [[ -z "$TELEGRAM_BOT_TOKEN" ]]; then
        print_error "TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        print_warning "–°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è"
        exit 1
    fi
    
    print_success "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# –î–µ–ø–ª–æ–π Backend –Ω–∞ GitHub
deploy_backend() {
    print_step "–î–µ–ø–ª–æ–π Backend –Ω–∞ GitHub..."
    
    # –ö–æ–º–º–∏—Ç –∏ –ø—É—à –∏–∑–º–µ–Ω–µ–Ω–∏–π
    git add backend/
    git commit -m "üöÄ Deploy backend updates" || print_warning "–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
    git push origin main
    
    print_success "Backend –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ GitHub. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ GitHub Actions –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è"
    print_warning "URL –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–ø–ª–æ—è –≤ GitHub Actions"
}

# –î–µ–ø–ª–æ–π Frontend –Ω–∞ Firebase
deploy_frontend() {
    print_step "–î–µ–ø–ª–æ–π Frontend –Ω–∞ Firebase..."
    
    cd frontend
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    npm install
    
    # –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
    print_step "–°–±–æ—Ä–∫–∞ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    npm run build
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Firebase
    print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Firebase..."
    if ! firebase projects:list &> /dev/null; then
        print_warning "–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Firebase"
        firebase login
    fi
    
    # –î–µ–ø–ª–æ–π –Ω–∞ Firebase
    print_step "–î–µ–ø–ª–æ–π –Ω–∞ Firebase Hosting..."
    firebase deploy --only hosting
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ URL
    PROJECT_ID=$(firebase use --current 2>/dev/null | grep -o "prediction-bot-[a-z0-9]*" || echo "your-project")
    FRONTEND_URL="https://${PROJECT_ID}.web.app"
    
    cd ..
    
    print_success "Frontend –∑–∞–¥–µ–ø–ª–æ–µ–Ω –Ω–∞ Firebase!"
    print_success "URL: $FRONTEND_URL"
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ URL –¥–ª—è –±–æ—Ç–∞
    echo "WEBAPP_URL=$FRONTEND_URL" >> .env.temp
}

# –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞
deploy_bot() {
    print_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞..."
    
    cd telegram-bot
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -d "venv" ]; then
        print_step "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        python3 -m venv venv
    fi
    
    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print_step "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    source venv/bin/activate || source venv/Scripts/activate  # Windows compatibility
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python..."
    pip install -r requirements.txt
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
    if [ ! -f ".env" ]; then
        print_step "–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –¥–ª—è –±–æ—Ç–∞..."
        cat > .env << EOF
TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN
API_BASE_URL=${API_BASE_URL:-http://localhost:8000}
WEBAPP_URL=${WEBAPP_URL:-http://localhost:3000}
EOF
    fi
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Å –Ω–æ–≤—ã–º–∏ URL –µ—Å–ª–∏ –µ—Å—Ç—å
    if [ -f "../.env.temp" ]; then
        cat ../.env.temp >> .env
        rm ../.env.temp
    fi
    
    print_success "Telegram –±–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
    print_warning "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    print_warning "cd telegram-bot && source venv/bin/activate && python main.py"
    
    cd ..
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${BLUE}"
    echo "üöÄ ====================================="
    echo "   –ü—Ä–µ–¥–∏–∫—à–Ω –ë–æ—Ç - –ê–≤—Ç–æ–¥–µ–ø–ª–æ–π"
    echo "===================================== üöÄ"
    echo -e "${NC}"
    
    DEPLOY_TARGET=${1:-all}
    
    case $DEPLOY_TARGET in
        backend)
            print_step "–î–µ–ø–ª–æ–π —Ç–æ–ª—å–∫–æ Backend..."
            check_dependencies
            deploy_backend
            ;;
        frontend)
            print_step "–î–µ–ø–ª–æ–π —Ç–æ–ª—å–∫–æ Frontend..."
            check_dependencies
            deploy_frontend
            ;;
        bot)
            print_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–ª—å–∫–æ Telegram –±–æ—Ç–∞..."
            check_dependencies
            check_env
            deploy_bot
            ;;
        all)
            print_step "–ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."
            check_dependencies
            check_env
            deploy_backend
            deploy_frontend
            deploy_bot
            ;;
        *)
            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $DEPLOY_TARGET"
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh [backend|frontend|bot|all]"
            exit 1
            ;;
    esac
    
    echo -e "${GREEN}"
    echo "üéâ ====================================="
    echo "   –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    echo "===================================== üéâ"
    echo -e "${NC}"
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    echo -e "${YELLOW}üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
    echo "1. ‚úÖ Backend: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ GitHub Actions"
    echo "2. ‚úÖ Frontend: –æ—Ç–∫—Ä–æ–π—Ç–µ URL Firebase"
    echo "3. ‚úÖ Bot: –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π –≤—ã—à–µ"
    echo "4. üîß –ù–∞—Å—Ç—Ä–æ–π—Ç–µ @BotFather —Å –Ω–æ–≤—ã–º WEBAPP_URL"
}

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –µ—Å–ª–∏ –µ—Å—Ç—å .env
if [ -f ".env" ]; then
    export $(cat .env | grep -v '#' | awk '/=/ {print $1}')
fi

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" 